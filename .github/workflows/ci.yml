name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision numpy matplotlib tqdm
        pip install black isort flake8 pytest pytest-cov
    
    - name: Run black formatting check
      run: |
        black --check --diff src/ tests/
    
    - name: Run isort import sorting check
      run: |
        isort --check-only --diff src/ tests/
    
    - name: Run flake8 linting
      run: |
        flake8 src/ tests/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision numpy matplotlib tqdm
        pip install black isort flake8 pytest pytest-cov
    
    - name: Run test_train.py
      run: |
        PYTHONPATH=src python tests/test_train.py
    
    - name: Run test_utils.py
      run: |
        PYTHONPATH=src python tests/test_utils.py
    
    - name: Run test_transforms.py
      run: |
        PYTHONPATH=src python tests/test_transforms.py
    
    - name: Run all tests with pytest
      run: |
        PYTHONPATH=src pytest tests/ -v --tb=short
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          test-results/
          coverage.xml
        retention-days: 30 